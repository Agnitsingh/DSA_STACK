class Solution {
public:

    class Car{
        public:
        int pos;
        int spd;

        public:
        Car(int position, int speed)
        {
            pos = position;
            spd = speed;
        }
    };

    static bool myComp(Car &a, Car &b)
    {
        return a.pos<b.pos;
    }
    

    int carFleet(int target, vector<int>& position, vector<int>& speed) {
        vector <Car> mycars;
        for(int i=0; i<position.size(); i++)
        {
            Car element(position[i],speed[i]);
            mycars.push_back(element);
        }

        sort(mycars.begin(),mycars.end(),myComp);

        stack<float> st;
        for(auto entity : mycars)
        {
            float time = (target - entity.pos)/(float)(entity.spd);
            while(!st.empty() && time>=st.top())
            {
                st.pop();
            }
            st.push(time);
        }

        return st.size();
    }
};
